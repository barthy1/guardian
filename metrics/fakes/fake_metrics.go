// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/metrics"
)

type FakeMetrics struct {
	NumCPUStub        func() int
	numCPUMutex       sync.RWMutex
	numCPUArgsForCall []struct{}
	numCPUReturns struct {
		result1 int
	}
	NumGoroutineStub        func() int
	numGoroutineMutex       sync.RWMutex
	numGoroutineArgsForCall []struct{}
	numGoroutineReturns struct {
		result1 int
	}
	LoopDevicesStub        func() int
	loopDevicesMutex       sync.RWMutex
	loopDevicesArgsForCall []struct{}
	loopDevicesReturns struct {
		result1 int
	}
	BackingStoresStub        func() int
	backingStoresMutex       sync.RWMutex
	backingStoresArgsForCall []struct{}
	backingStoresReturns struct {
		result1 int
	}
	DepotDirsStub        func() int
	depotDirsMutex       sync.RWMutex
	depotDirsArgsForCall []struct{}
	depotDirsReturns struct {
		result1 int
	}
}

func (fake *FakeMetrics) NumCPU() int {
	fake.numCPUMutex.Lock()
	fake.numCPUArgsForCall = append(fake.numCPUArgsForCall, struct{}{})
	fake.numCPUMutex.Unlock()
	if fake.NumCPUStub != nil {
		return fake.NumCPUStub()
	} else {
		return fake.numCPUReturns.result1
	}
}

func (fake *FakeMetrics) NumCPUCallCount() int {
	fake.numCPUMutex.RLock()
	defer fake.numCPUMutex.RUnlock()
	return len(fake.numCPUArgsForCall)
}

func (fake *FakeMetrics) NumCPUReturns(result1 int) {
	fake.NumCPUStub = nil
	fake.numCPUReturns = struct {
		result1 int
	}{result1}
}

func (fake *FakeMetrics) NumGoroutine() int {
	fake.numGoroutineMutex.Lock()
	fake.numGoroutineArgsForCall = append(fake.numGoroutineArgsForCall, struct{}{})
	fake.numGoroutineMutex.Unlock()
	if fake.NumGoroutineStub != nil {
		return fake.NumGoroutineStub()
	} else {
		return fake.numGoroutineReturns.result1
	}
}

func (fake *FakeMetrics) NumGoroutineCallCount() int {
	fake.numGoroutineMutex.RLock()
	defer fake.numGoroutineMutex.RUnlock()
	return len(fake.numGoroutineArgsForCall)
}

func (fake *FakeMetrics) NumGoroutineReturns(result1 int) {
	fake.NumGoroutineStub = nil
	fake.numGoroutineReturns = struct {
		result1 int
	}{result1}
}

func (fake *FakeMetrics) LoopDevices() int {
	fake.loopDevicesMutex.Lock()
	fake.loopDevicesArgsForCall = append(fake.loopDevicesArgsForCall, struct{}{})
	fake.loopDevicesMutex.Unlock()
	if fake.LoopDevicesStub != nil {
		return fake.LoopDevicesStub()
	} else {
		return fake.loopDevicesReturns.result1
	}
}

func (fake *FakeMetrics) LoopDevicesCallCount() int {
	fake.loopDevicesMutex.RLock()
	defer fake.loopDevicesMutex.RUnlock()
	return len(fake.loopDevicesArgsForCall)
}

func (fake *FakeMetrics) LoopDevicesReturns(result1 int) {
	fake.LoopDevicesStub = nil
	fake.loopDevicesReturns = struct {
		result1 int
	}{result1}
}

func (fake *FakeMetrics) BackingStores() int {
	fake.backingStoresMutex.Lock()
	fake.backingStoresArgsForCall = append(fake.backingStoresArgsForCall, struct{}{})
	fake.backingStoresMutex.Unlock()
	if fake.BackingStoresStub != nil {
		return fake.BackingStoresStub()
	} else {
		return fake.backingStoresReturns.result1
	}
}

func (fake *FakeMetrics) BackingStoresCallCount() int {
	fake.backingStoresMutex.RLock()
	defer fake.backingStoresMutex.RUnlock()
	return len(fake.backingStoresArgsForCall)
}

func (fake *FakeMetrics) BackingStoresReturns(result1 int) {
	fake.BackingStoresStub = nil
	fake.backingStoresReturns = struct {
		result1 int
	}{result1}
}

func (fake *FakeMetrics) DepotDirs() int {
	fake.depotDirsMutex.Lock()
	fake.depotDirsArgsForCall = append(fake.depotDirsArgsForCall, struct{}{})
	fake.depotDirsMutex.Unlock()
	if fake.DepotDirsStub != nil {
		return fake.DepotDirsStub()
	} else {
		return fake.depotDirsReturns.result1
	}
}

func (fake *FakeMetrics) DepotDirsCallCount() int {
	fake.depotDirsMutex.RLock()
	defer fake.depotDirsMutex.RUnlock()
	return len(fake.depotDirsArgsForCall)
}

func (fake *FakeMetrics) DepotDirsReturns(result1 int) {
	fake.DepotDirsStub = nil
	fake.depotDirsReturns = struct {
		result1 int
	}{result1}
}

var _ metrics.Metrics = new(FakeMetrics)
