// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/gardener"
)

type FakeSysInfoProvider struct {
	TotalMemoryStub        func() (uint64, error)
	totalMemoryMutex       sync.RWMutex
	totalMemoryArgsForCall []struct{}
	totalMemoryReturns struct {
		result1 uint64
		result2 error
	}
	TotalDiskStub        func() (uint64, error)
	totalDiskMutex       sync.RWMutex
	totalDiskArgsForCall []struct{}
	totalDiskReturns struct {
		result1 uint64
		result2 error
	}
}

func (fake *FakeSysInfoProvider) TotalMemory() (uint64, error) {
	fake.totalMemoryMutex.Lock()
	fake.totalMemoryArgsForCall = append(fake.totalMemoryArgsForCall, struct{}{})
	fake.totalMemoryMutex.Unlock()
	if fake.TotalMemoryStub != nil {
		return fake.TotalMemoryStub()
	} else {
		return fake.totalMemoryReturns.result1, fake.totalMemoryReturns.result2
	}
}

func (fake *FakeSysInfoProvider) TotalMemoryCallCount() int {
	fake.totalMemoryMutex.RLock()
	defer fake.totalMemoryMutex.RUnlock()
	return len(fake.totalMemoryArgsForCall)
}

func (fake *FakeSysInfoProvider) TotalMemoryReturns(result1 uint64, result2 error) {
	fake.TotalMemoryStub = nil
	fake.totalMemoryReturns = struct {
		result1 uint64
		result2 error
	}{result1, result2}
}

func (fake *FakeSysInfoProvider) TotalDisk() (uint64, error) {
	fake.totalDiskMutex.Lock()
	fake.totalDiskArgsForCall = append(fake.totalDiskArgsForCall, struct{}{})
	fake.totalDiskMutex.Unlock()
	if fake.TotalDiskStub != nil {
		return fake.TotalDiskStub()
	} else {
		return fake.totalDiskReturns.result1, fake.totalDiskReturns.result2
	}
}

func (fake *FakeSysInfoProvider) TotalDiskCallCount() int {
	fake.totalDiskMutex.RLock()
	defer fake.totalDiskMutex.RUnlock()
	return len(fake.totalDiskArgsForCall)
}

func (fake *FakeSysInfoProvider) TotalDiskReturns(result1 uint64, result2 error) {
	fake.TotalDiskStub = nil
	fake.totalDiskReturns = struct {
		result1 uint64
		result2 error
	}{result1, result2}
}

var _ gardener.SysInfoProvider = new(FakeSysInfoProvider)
