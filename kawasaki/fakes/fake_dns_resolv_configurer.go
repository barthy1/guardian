// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/kawasaki"
	"github.com/pivotal-golang/lager"
)

type FakeDnsResolvConfigurer struct {
	ConfigureStub        func(log lager.Logger) error
	configureMutex       sync.RWMutex
	configureArgsForCall []struct {
		log lager.Logger
	}
	configureReturns struct {
		result1 error
	}
}

func (fake *FakeDnsResolvConfigurer) Configure(log lager.Logger) error {
	fake.configureMutex.Lock()
	fake.configureArgsForCall = append(fake.configureArgsForCall, struct {
		log lager.Logger
	}{log})
	fake.configureMutex.Unlock()
	if fake.ConfigureStub != nil {
		return fake.ConfigureStub(log)
	} else {
		return fake.configureReturns.result1
	}
}

func (fake *FakeDnsResolvConfigurer) ConfigureCallCount() int {
	fake.configureMutex.RLock()
	defer fake.configureMutex.RUnlock()
	return len(fake.configureArgsForCall)
}

func (fake *FakeDnsResolvConfigurer) ConfigureArgsForCall(i int) lager.Logger {
	fake.configureMutex.RLock()
	defer fake.configureMutex.RUnlock()
	return fake.configureArgsForCall[i].log
}

func (fake *FakeDnsResolvConfigurer) ConfigureReturns(result1 error) {
	fake.ConfigureStub = nil
	fake.configureReturns = struct {
		result1 error
	}{result1}
}

var _ kawasaki.DnsResolvConfigurer = new(FakeDnsResolvConfigurer)
