// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden"
	"github.com/cloudfoundry-incubator/guardian/rundmc/runrunc"
	"github.com/pivotal-golang/lager"
)

type FakeExecPreparer struct {
	PrepareStub        func(log lager.Logger, bundlePath string, spec garden.ProcessSpec) (*runrunc.PreparedSpec, error)
	prepareMutex       sync.RWMutex
	prepareArgsForCall []struct {
		log        lager.Logger
		bundlePath string
		spec       garden.ProcessSpec
	}
	prepareReturns struct {
		result1 *runrunc.PreparedSpec
		result2 error
	}
}

func (fake *FakeExecPreparer) Prepare(log lager.Logger, bundlePath string, spec garden.ProcessSpec) (*runrunc.PreparedSpec, error) {
	fake.prepareMutex.Lock()
	fake.prepareArgsForCall = append(fake.prepareArgsForCall, struct {
		log        lager.Logger
		bundlePath string
		spec       garden.ProcessSpec
	}{log, bundlePath, spec})
	fake.prepareMutex.Unlock()
	if fake.PrepareStub != nil {
		return fake.PrepareStub(log, bundlePath, spec)
	} else {
		return fake.prepareReturns.result1, fake.prepareReturns.result2
	}
}

func (fake *FakeExecPreparer) PrepareCallCount() int {
	fake.prepareMutex.RLock()
	defer fake.prepareMutex.RUnlock()
	return len(fake.prepareArgsForCall)
}

func (fake *FakeExecPreparer) PrepareArgsForCall(i int) (lager.Logger, string, garden.ProcessSpec) {
	fake.prepareMutex.RLock()
	defer fake.prepareMutex.RUnlock()
	return fake.prepareArgsForCall[i].log, fake.prepareArgsForCall[i].bundlePath, fake.prepareArgsForCall[i].spec
}

func (fake *FakeExecPreparer) PrepareReturns(result1 *runrunc.PreparedSpec, result2 error) {
	fake.PrepareStub = nil
	fake.prepareReturns = struct {
		result1 *runrunc.PreparedSpec
		result2 error
	}{result1, result2}
}

var _ runrunc.ExecPreparer = new(FakeExecPreparer)
