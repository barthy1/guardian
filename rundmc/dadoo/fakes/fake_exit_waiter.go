// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/rundmc/dadoo"
)

type FakeExitWaiter struct {
	WaitStub        func(path string) (<-chan struct{}, error)
	waitMutex       sync.RWMutex
	waitArgsForCall []struct {
		path string
	}
	waitReturns struct {
		result1 <-chan struct{}
		result2 error
	}
}

func (fake *FakeExitWaiter) Wait(path string) (<-chan struct{}, error) {
	fake.waitMutex.Lock()
	fake.waitArgsForCall = append(fake.waitArgsForCall, struct {
		path string
	}{path})
	fake.waitMutex.Unlock()
	if fake.WaitStub != nil {
		return fake.WaitStub(path)
	} else {
		return fake.waitReturns.result1, fake.waitReturns.result2
	}
}

func (fake *FakeExitWaiter) WaitCallCount() int {
	fake.waitMutex.RLock()
	defer fake.waitMutex.RUnlock()
	return len(fake.waitArgsForCall)
}

func (fake *FakeExitWaiter) WaitArgsForCall(i int) string {
	fake.waitMutex.RLock()
	defer fake.waitMutex.RUnlock()
	return fake.waitArgsForCall[i].path
}

func (fake *FakeExitWaiter) WaitReturns(result1 <-chan struct{}, result2 error) {
	fake.WaitStub = nil
	fake.waitReturns = struct {
		result1 <-chan struct{}
		result2 error
	}{result1, result2}
}

var _ dadoo.ExitWaiter = new(FakeExitWaiter)
