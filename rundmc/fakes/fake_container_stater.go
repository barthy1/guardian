// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/guardian/rundmc"
	"github.com/pivotal-golang/lager"
)

type FakeContainerStater struct {
	StateStub        func(log lager.Logger, id string) (rundmc.State, error)
	stateMutex       sync.RWMutex
	stateArgsForCall []struct {
		log lager.Logger
		id  string
	}
	stateReturns struct {
		result1 rundmc.State
		result2 error
	}
}

func (fake *FakeContainerStater) State(log lager.Logger, id string) (rundmc.State, error) {
	fake.stateMutex.Lock()
	fake.stateArgsForCall = append(fake.stateArgsForCall, struct {
		log lager.Logger
		id  string
	}{log, id})
	fake.stateMutex.Unlock()
	if fake.StateStub != nil {
		return fake.StateStub(log, id)
	} else {
		return fake.stateReturns.result1, fake.stateReturns.result2
	}
}

func (fake *FakeContainerStater) StateCallCount() int {
	fake.stateMutex.RLock()
	defer fake.stateMutex.RUnlock()
	return len(fake.stateArgsForCall)
}

func (fake *FakeContainerStater) StateArgsForCall(i int) (lager.Logger, string) {
	fake.stateMutex.RLock()
	defer fake.stateMutex.RUnlock()
	return fake.stateArgsForCall[i].log, fake.stateArgsForCall[i].id
}

func (fake *FakeContainerStater) StateReturns(result1 rundmc.State, result2 error) {
	fake.StateStub = nil
	fake.stateReturns = struct {
		result1 rundmc.State
		result2 error
	}{result1, result2}
}

var _ rundmc.ContainerStater = new(FakeContainerStater)
